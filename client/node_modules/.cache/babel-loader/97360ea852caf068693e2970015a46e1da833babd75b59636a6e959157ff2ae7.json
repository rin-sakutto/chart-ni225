{"ast":null,"code":"var _jsxFileName = \"/workspaces/chart-ni225/client/src/Forcast/ForcastInput.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForcastInput = ({\n  value,\n  onChange\n}) => {\n  // 入力制御: 数字と小数点のみ許可\n  const handleChange = e => {\n    const val = e.target.value;\n    if (/^\\d*\\.?\\d*$/.test(val)) {\n      onChange(val);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"16px 0\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginRight: 8\n      },\n      children: \"\\u4E88\\u6E2C\\u5024:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: handleChange,\n      placeholder: \"\\u4F8B: 38000.50\",\n      style: {\n        padding: \"6px 12px\",\n        borderRadius: 4,\n        border: \"1px solid #8884d8\",\n        width: 120,\n        textAlign: \"right\"\n      },\n      inputMode: \"decimal\",\n      pattern: \"[0-9.]*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ForcastInput;\nexport default ForcastInput;\nvar _c;\n$RefreshReg$(_c, \"ForcastInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ForcastInput","value","onChange","handleChange","e","val","target","test","style","margin","textAlign","children","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","padding","borderRadius","border","width","inputMode","pattern","_c","$RefreshReg$"],"sources":["/workspaces/chart-ni225/client/src/Forcast/ForcastInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface ForcastInputProps {\n  value: string;\n  onChange: (value: string) => void;\n}\n\nconst ForcastInput: React.FC<ForcastInputProps> = ({ value, onChange }) => {\n  // 入力制御: 数字と小数点のみ許可\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    if (/^\\d*\\.?\\d*$/.test(val)) {\n      onChange(val);\n    }\n  };\n\n  return (\n    <div style={{ margin: \"16px 0\", textAlign: \"center\" }}>\n      <label style={{ marginRight: 8 }}>予測値:</label>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"例: 38000.50\"\n        style={{ padding: \"6px 12px\", borderRadius: 4, border: \"1px solid #8884d8\", width: 120, textAlign: \"right\" }}\n        inputMode=\"decimal\"\n        pattern=\"[0-9.]*\"\n      />\n    </div>\n  );\n};\n\nexport default ForcastInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzE;EACA,MAAMC,YAAY,GAAIC,CAAsC,IAAK;IAC/D,MAAMC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACL,KAAK;IAC1B,IAAI,aAAa,CAACM,IAAI,CAACF,GAAG,CAAC,EAAE;MAC3BH,QAAQ,CAACG,GAAG,CAAC;IACf;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,KAAK,EAAE;MAAEC,MAAM,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACpDZ,OAAA;MAAOS,KAAK,EAAE;QAAEI,WAAW,EAAE;MAAE,CAAE;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9CjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXhB,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEC,YAAa;MACvBe,WAAW,EAAC,kBAAa;MACzBV,KAAK,EAAE;QAAEW,OAAO,EAAE,UAAU;QAAEC,YAAY,EAAE,CAAC;QAAEC,MAAM,EAAE,mBAAmB;QAAEC,KAAK,EAAE,GAAG;QAAEZ,SAAS,EAAE;MAAQ,CAAE;MAC7Ga,SAAS,EAAC,SAAS;MACnBC,OAAO,EAAC;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,EAAA,GAvBIzB,YAAyC;AAyB/C,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}