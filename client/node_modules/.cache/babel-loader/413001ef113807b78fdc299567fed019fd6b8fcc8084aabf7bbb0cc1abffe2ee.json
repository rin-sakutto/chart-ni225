{"ast":null,"code":"var _jsxFileName = \"/workspaces/chart-ni225/client/src/Chart.tsx\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u65E5\\u7D4C\\u5E73\\u5747\\u682A\\u4FA1\\uFF08\\u904E\\u53BB1\\u5E74\\u5206\\uFF09\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          minTickGap: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [\"auto\", \"auto\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#8884d8\",\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          paddingTop: 150\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Chart","data","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","length","margin","top","right","left","bottom","strokeDasharray","dataKey","minTickGap","domain","type","stroke","dot","textAlign","paddingTop","_c","$RefreshReg$"],"sources":["/workspaces/chart-ni225/client/src/Chart.tsx"],"sourcesContent":["import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\n\ninterface DataPoint {\n  date: string;\n  value: number;\n}\n\ninterface ChartProps {\n  data: DataPoint[];\n}\n\nconst Chart: React.FC<ChartProps> = ({ data }) => {\n  return (\n    <div style={{ width: \"100%\", height: 400 }}>\n      <h2>日経平均株価（過去1年分）</h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {data.length > 0 ? (\n          <LineChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" minTickGap={40} />\n            <YAxis domain={[\"auto\", \"auto\"]} />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" dot={false} />\n          </LineChart>\n        ) : (\n          <div style={{ textAlign: \"center\", paddingTop: 150 }}>Loading...</div>\n        )}\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Chart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWtG,MAAMC,KAA2B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChD,oBACEF,OAAA;IAAKG,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,gBACzCN,OAAA;MAAAM,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBV,OAAA,CAACF,mBAAmB;MAACM,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAC,QAAA,EAC5CJ,IAAI,CAACS,MAAM,GAAG,CAAC,gBACdX,OAAA,CAACR,SAAS;QAACU,IAAI,EAAEA,IAAK;QAACU,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAV,QAAA,gBACxEN,OAAA,CAACH,aAAa;UAACoB,eAAe,EAAC;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCV,OAAA,CAACN,KAAK;UAACwB,OAAO,EAAC,MAAM;UAACC,UAAU,EAAE;QAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxCV,OAAA,CAACL,KAAK;UAACyB,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnCV,OAAA,CAACJ,OAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXV,OAAA,CAACP,IAAI;UAAC4B,IAAI,EAAC,UAAU;UAACH,OAAO,EAAC,OAAO;UAACI,MAAM,EAAC,SAAS;UAACC,GAAG,EAAE;QAAM;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,gBAEZV,OAAA;QAAKG,KAAK,EAAE;UAAEqB,SAAS,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAI,CAAE;QAAAnB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACtE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACgB,EAAA,GAnBIzB,KAA2B;AAqBjC,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}